name: Set component to JIRA
on:
  workflow_call:
    inputs:
      APP_NAME:
        description: "Application name"
        required: true
        type: string
    secrets:
      JIRA_API_KEY:
        required: true

jobs:
  update-jira:
    runs-on: [ self-hosted, docker-runner ]

    steps:
      - name: Get branch name and extract Jira issue ID
        id: extract_issue_id
        run: |
          echo "Branch name: ${GITHUB_HEAD_REF}"
          ISSUE_ID=$(echo "${GITHUB_HEAD_REF}" | grep -oE '[A-Z]+-[0-9]+')
          echo "Issue ID: ${ISSUE_ID}"
          echo "jira_issue_id=${ISSUE_ID}" >> $GITHUB_ENV

      - name: Create Jira component
        id: creat_jira_component
        run: |
          PROJECT=$(echo "${GITHUB_HEAD_REF}" | grep -oE '[A-Z]+')
          
          echo "Create Jira component ${{ env.APP_NAME }}. Project ${PROJECT}"
          
          CREATE_COMPONENT=$(cat <<EOF
          {
            "description": "Component ${{ env.APP_NAME }} created automatically",
            "name": "${{ env.APP_NAME }}",
            "project": "$PROJECT",
            "assigneeType": "PROJECT_LEAD"
          }
          EOF
          )

          echo "${CREATE_COMPONENT}"
          
          curl --silent \
            --request POST \
            --url "https://trend-it.atlassian.net/rest/api/3/component" \
            --header "Authorization: Basic ${{ secrets.JIRA_API_KEY }}" \
            --header "Content-Type: application/json" \
            --data "$CREATE_COMPONENT"
          
          echo "\nComponent: ${{ env.APP_NAME }}"
          echo "jira_component=${{ env.APP_NAME }}" >> $GITHUB_ENV
