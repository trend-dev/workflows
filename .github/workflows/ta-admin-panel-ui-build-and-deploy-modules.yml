name: 'Build & deploy multiply modules'

on:
  workflow_call:
    inputs:
      appName:
        type: string
        required: true
      namespace:
        required: true
        type: string
      useCustom:
        required: true
        type: string

env:
  APP_NAME: '${{ inputs.appName }}'
  APP_GIT_BRANCH_NAME: "${{ github.ref_name }}"
  APP_COMMIT_HASH: '${{ github.sha }}'
  APP_LOCAL_PATH: './dist/${{ inputs.appName }}'
  APP_REMOTE_PATH: '/platform-modules/apps'
  CI_CDN_PUBLIC_HOST: 'https://platform-modules.trendagent.ru'
  # TA Platform AWS auth
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_TA_PLATFORM_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_TA_PLATFORM_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.CI_AWS_REGION }}
  REQUESTS_CA_BUNDLE: "/etc/ssl/certs/ca-certificates.crt"

jobs:
  build_and_deploy:
    name: Build and deploy to CDN
    runs-on: [ self-hosted, docker-runner-front ]
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup node
        id: node_build
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com'
          scope: '@trend-dev'
          cache: 'pnpm'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPT_TOKEN }}
          CI: true

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i

      - name: Build [${{ inputs.appName }}] module
        run: pnpm nx run ${{ inputs.appName }}:build --verbose

      - id: getBranchName
        if: ${{ github.event.inputs.useCustom == 'true' }}
        run: |
          chmod +x scripts/prepare-ref-name.sh
          bash ./scripts/prepare-ref-name.sh ${{ github.ref_name }}  

      - id: branchName
        run: echo "branchName=$(echo ${{ steps.getBranchName.outputs.branchName || inputs.namespace }})" >> $GITHUB_OUTPUT

      - name: Upload to CDN
        uses: unfor19/install-aws-cli-action@master
        with:
          version: 2
      - run: aws --endpoint-url=https://s3.selcdn.ru s3 cp '${{ env.APP_LOCAL_PATH }}' s3:/${{ env.APP_REMOTE_PATH }}/${{ steps.branchName.outputs.branchName }}/${{ env.APP_NAME }} --recursive
        shell: bash
